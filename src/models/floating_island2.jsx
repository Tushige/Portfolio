/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useThree } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { useSpring, a } from '@react-spring/three'
import { useDrag, useGesture } from '@use-gesture/react';

export function FloatingIsland2({ isRotating, setIsRotating, ...props }) {
  const { nodes, materials } = useGLTF('/3d/island.glb')
  const islandRef = useRef();
  const { gl, viewport, size } = useThree();
  const aspect = size.width / viewport.width;

  const [springs, api] = useSpring(() => ({
    x: 0,
    config: { friction: 100 }
  }))

  const bind = useDrag(({ dragging, active, down, offset: [dx], elapsedTime }) => {
    if (down && dragging) {
      api.start({ x: dx / aspect })
    } else if (down) {
      api.stop();
    }
  })
  const rotation = springs.x.to([0, 1], [0, Math.PI]);
  return (
    <a.group
      ref={islandRef}
      {...props}
      {...bind()}
      {...springs}
      rotation-y={rotation}
    >
      <mesh
        geometry={nodes.polySurface944_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface945_tree1_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface946_tree2_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface947_tree1_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface948_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface949_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.pCube11_rocks1_0.geometry}
        material={materials.PaletteMaterial001}
      />
    </a.group>
  )
}
