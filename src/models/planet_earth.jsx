/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: kaede256 (https://sketchfab.com/kaede256)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/planet-earth-bce3ea48781c4f02a8c52d2678220d07
Title: Planet Earth
*/
'use client'
import React, { useRef, useState } from 'react'
import { MathUtils } from 'THREE'
import { useFrame } from "@react-three/fiber"
import { useGLTF, useAnimations } from '@react-three/drei'
import { a, useSpring, config } from "@react-spring/three"
import { useDrag } from '@use-gesture/react'

export function PlanetEarth(props) {
  const group = useRef()
  const outerRef = useRef()
  const { nodes, materials, animations } = useGLTF('/3d/planet_earth.glb')
  const { actions } = useAnimations(animations, group)


  // planet drag
  const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0, config: config.wobbly }))
  const bind = useDrag(({ down, movement: [mx, my] }) => {
    if (down) {
      api.start({ x: mx, y: my })
    } else {
      api.start({ x: 0, y: 0 })
    }
  })

  const [{ s }, apiScale] = useSpring(() => ({
    from: {
      s: 0.08
    },
    config: {
      mass: 0.1,
      friction: 1,
      tension: 100,
    }
  }))

  // 
  const springs = useSpring({
    from: {
      scale: 0.08
    },
    to: {
      scale: 0.1
    }
  })

  const handleClick = () => {
    apiScale.start({
      from: {
        s: 0.1,
      },
      to: [
        { s: 0.08, }
      ]
    })
  }
  const position = {
    x: x.to({
      range: [-100, 100],
      output: [-0.1, 0.1],
      extrapolate: 'clamp'
    }),
    y: y.to({
      range: [-100, 100],
      output: [0.1, -0.1],
      extrapolate: 'clamp'
    })
  }
  useFrame(({ camera, clock }) => {
    /**
     * page load animation
     */
    const t = clock.getElapsedTime();
    outerRef.current.scale.x = MathUtils.lerp(outerRef.current.scale.x, 1, 0.05)
    outerRef.current.scale.y = MathUtils.lerp(outerRef.current.scale.y, 1, 0.05)
    outerRef.current.scale.z = MathUtils.lerp(outerRef.current.scale.z, 1, 0.05)
  })
  return (
    <group position={[0, 0, 0]} scale={[2, 2, 2]} ref={outerRef}>
      <a.group
        {...props}
        {...bind()}
        onClick={handleClick}
        ref={group}
        // scale={0.1}
        scale={s}
        rotation-y={springs.scale}
        position={[0, 0, 0]}
        position-x={position.x}
        position-y={position.y}
        dispose={null}
      >
        <group name="Sketchfab_Scene">
          <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
            <group
              name="578a67fb859c4432ad395a9d408af1e7fbx"
              rotation={[Math.PI / 2, 0, 0]}
              scale={0.01}>
              <group name="Object_2">
                <group name="RootNode">
                  <group name="Earth" rotation={[-Math.PI / 2, 0, 0.681]} scale={358.622}>
                    <mesh
                      name="Earth_Ice_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Earth_Ice_0.geometry}
                      material={materials.material}
                    />
                    <mesh
                      name="Earth_Water_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Earth_Water_0.geometry}
                      material={materials.Water}
                    />
                    <mesh
                      name="Earth_Sand_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Earth_Sand_0.geometry}
                      material={materials.Sand}
                    />
                    <mesh
                      name="Earth_Grass_0"
                      castShadow
                      receiveShadow
                      geometry={nodes.Earth_Grass_0.geometry}
                      material={materials.Grass}
                    />
                    <group
                      name="Earth_Details"
                      position={[0.163, -0.812, 0.592]}
                      rotation={[-0.525, -0.789, -2.962]}
                      scale={[0.006, 0.006, 0.009]}>
                      <mesh
                        name="Earth_Details_Wood_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Earth_Details_Wood_0.geometry}
                        material={materials.Wood}
                      />
                      <mesh
                        name="Earth_Details_Tree_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Earth_Details_Tree_0.geometry}
                        material={materials.Tree}
                      />
                      <mesh
                        name="Earth_Details_Tree_0_1"
                        castShadow
                        receiveShadow
                        geometry={nodes.Earth_Details_Tree_0_1.geometry}
                        material={materials.Tree}
                      />
                      <mesh
                        name="Earth_Details_Ice_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Earth_Details_Ice_0.geometry}
                        material={materials.material}
                      />
                      <mesh
                        name="Earth_Details_Blue_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Earth_Details_Blue_0.geometry}
                        material={materials.Blue}
                      />
                      <mesh
                        name="Earth_Details_Sand_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Earth_Details_Sand_0.geometry}
                        material={materials.Sand}
                      />
                      <mesh
                        name="Earth_Details_red_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Earth_Details_red_0.geometry}
                        material={materials.material_7}
                      />
                    </group>
                    <group
                      name="Clouds_and_Stars"
                      position={[-0.577, -0.085, 0.844]}
                      rotation={[-1.555, -0.135, 2.627]}
                      scale={0.042}>
                      <mesh
                        name="Clouds_and_Stars_Ice_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Clouds_and_Stars_Ice_0.geometry}
                        material={materials.material}
                      />
                      <mesh
                        name="Clouds_and_Stars_Star_0"
                        castShadow
                        receiveShadow
                        geometry={nodes.Clouds_and_Stars_Star_0.geometry}
                        material={materials.Star}
                      />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </a.group>
    </group>
  )
}
