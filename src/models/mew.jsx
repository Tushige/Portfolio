'use client'
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Marco Fascinetto (https://sketchfab.com/Marco.Fascinetto)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/mew-flying-5c3814b08f48493396f298d48629d4dc
Title: Mew - Flying
*/

import React, { useRef, useEffect } from 'react'
import { MathUtils } from 'THREE'
import { useFrame } from "@react-three/fiber"
import { useGLTF, useAnimations } from '@react-three/drei'

export function Mew({ isRotating, ...props }) {
  const group = useRef()
  const outerRef = useRef()
  const { scene, nodes, materials, animations } = useGLTF('/3d/mew_-_flying.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    if (isRotating) {
      actions['Take 001'].play();
    } else {
      actions['Take 001'].stop();
    }
  }, [actions, isRotating])
  useFrame(({ camera, clock }) => {
    /**
     * page load animation
     */
    const t = clock.getElapsedTime();
    outerRef.current.position.x = MathUtils.lerp(outerRef.current.position.x, 0, 0.05)
    outerRef.current.position.y = MathUtils.lerp(outerRef.current.position.y, 0, 0.05)
    outerRef.current.position.z = MathUtils.lerp(outerRef.current.position.z, 0, 0.05)
  })
  return (
    <group position={[-2, -2, -2]} ref={outerRef}>
      <mesh
        ref={group}
        {...props}
        position={[0, 0, 0.4]}
        scale={[0.05, 0.05, 0.05]}
        rotation={[Math.PI / 6, Math.PI / 2, 0]}
        dispose={null}
      >
        <primitive object={scene} />
      </mesh >
    </group>
  )
}